{
  "name": "Sky21",
  "tagline": "nginx worker environment",
  "body": "`nginx 的环境变量的解析`\r\n\r\n一.nginx 的环境变量的解析\r\n====\r\n   做了个实验发现，再启动nginx时设置的环境变量（在当前的shell环境）然后在子进程中去打印\r\n的时候就不见了。\r\n   然后看了下nginx的源码才知道，在启动worker进程的时候，会删除之前的一些环境变量。所以\r\n要在子进程中使用的话则要使用nginx指令env来进行设置。\r\n   \r\n\r\n二.nginx环境变量设置指令\r\n====\r\n\r\n```bash    \r\nSyntax:    env variable[=value];\r\nDefault:\t\r\nenv TZ;\r\nContext:\tmain\r\n```\r\n如：  \r\nenv PERL5LIB=/tmp;  注意：等号左右不可以有空格。\r\n\r\n\r\n三.代码分析\r\n====\r\n\r\n```c\r\n进程初始化的时候：  \r\nstatic void\r\nngx_worker_process_init(ngx_cycle_t *cycle, ngx_int_t worker)\r\n{\r\n    sigset_t          set;\r\n    uint64_t          cpu_affinity;\r\n    ngx_int_t         n;\r\n    ngx_uint_t        i;\r\n    struct rlimit     rlmt;\r\n    ngx_core_conf_t  *ccf;\r\n    ngx_listening_t  *ls;\r\n　　//配置一些环境变量\r\n    if (ngx_set_environment(cycle, NULL) == NULL) {\r\n        /* fatal */\r\n        exit(2);\r\n    }\r\n　　 //获取配置信息\r\n    ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);\r\n\r\n    if (worker >= 0 && ccf->priority != 0) {\r\n        if (setpriority(PRIO_PROCESS, 0, ccf->priority) == -1) {\r\n            ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno,\r\n                          \"setpriority(%d) failed\", ccf->priority);\r\n        }\r\n    }\r\n    \r\n    ````\r\n}\r\n\r\n\r\nchar **\r\nngx_set_environment(ngx_cycle_t *cycle, ngx_uint_t *last)\r\n{\r\n    char             **p, **env;\r\n    ngx_str_t         *var;\r\n    ngx_uint_t         i, n;\r\n    ngx_core_conf_t   *ccf;\r\n\r\n    ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);\r\n\r\n    if (last == NULL && ccf->environment) {\r\n        return ccf->environment;\r\n    }\r\n\r\n    var = ccf->env.elts;\r\n\r\n    for (i = 0; i < ccf->env.nelts; i++) {\r\n        if (ngx_strcmp(var[i].data, \"TZ\") == 0\r\n            || ngx_strncmp(var[i].data, \"TZ=\", 3) == 0)\r\n        {\r\n            goto tz_found;\r\n        }\r\n    }\r\n\r\n    var = ngx_array_push(&ccf->env);\r\n    if (var == NULL) {\r\n        return NULL;\r\n    }\r\n\r\n    var->len = 2;\r\n    var->data = (u_char *) \"TZ\";\r\n\r\n    var = ccf->env.elts;\r\n\r\ntz_found:\r\n\r\n    n = 0;\r\n\r\n    for (i = 0; i < ccf->env.nelts; i++) {\r\n\r\n        if (var[i].data[var[i].len] == '=') {\r\n            n++;\r\n            continue;\r\n        }\r\n\r\n        for (p = ngx_os_environ; *p; p++) {\r\n\r\n            if (ngx_strncmp(*p, var[i].data, var[i].len) == 0\r\n                && (*p)[var[i].len] == '=')\r\n            {\r\n                n++;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (last) {\r\n        env = ngx_alloc((*last + n + 1) * sizeof(char *), cycle->log);\r\n        *last = n;\r\n\r\n    } else {\r\n        env = ngx_palloc(cycle->pool, (n + 1) * sizeof(char *));\r\n    }\r\n\r\n    if (env == NULL) {\r\n        return NULL;\r\n    }\r\n\r\n    n = 0;\r\n\r\n    for (i = 0; i < ccf->env.nelts; i++) {\r\n\r\n        if (var[i].data[var[i].len] == '=') {\r\n            env[n++] = (char *) var[i].data;\r\n            continue;\r\n        }\r\n\r\n        for (p = ngx_os_environ; *p; p++) {\r\n\r\n            if (ngx_strncmp(*p, var[i].data, var[i].len) == 0\r\n                && (*p)[var[i].len] == '=')\r\n            {\r\n                env[n++] = *p;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    env[n] = NULL;\r\n\r\n    if (last == NULL) {\r\n        ccf->environment = env;\r\n        environ = env;\r\n    }\r\n\r\n    return env;\r\n}\r\n\r\n\r\n\r\n\r\n```\r\n\r\n\r\n欢迎一起交流学习 \r\n====\r\n \r\n在使用中有任何问题，欢迎反馈给我，可以用以下联系方式跟我交流\r\n\r\n* 邮件(1031379296#qq.com, 把#换成@)\r\n* QQ: 1031379296\r\n* weibo: [@王发康](http://weibo.com/u/2786211992/home)\r\n\r\n\r\nThx\r\n====\r\n\r\n* chunshengsterATgmail.com\r\n\r\n\r\nAuthor\r\n====\r\n* Linux\\nginx\\golang\\c\\c++爱好者\r\n* 欢迎一起交流  一起学习# \r\n* Others say good and Others good\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}